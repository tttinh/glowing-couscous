package mongodb

import (
	"time"

	"go.mongodb.org/mongo-driver/bson/primitive"
)

// Base contains common fields for all tables
type Base struct {
	Id        primitive.ObjectID `bson:"_id,omitempty"`
	CreatedAt time.Time          `bson:"created_at"`
	UpdatedAt time.Time          `bson:"updated_at"`
	DeletedAt *time.Time         `bson:"deleted_at,omitempty"`
}

func (b *Base) SetCreatedAt() {
	now := time.Now()
	b.CreatedAt = now
	b.UpdatedAt = now
}

func (b *Base) SetUpdatedAt() {
	b.UpdatedAt = time.Now()
}

type Employee struct {
	// ID is uuidv4 and generated by user service, so we can not use Base struct.
	Id        string     `bson:"_id,omitempty"`
	CreatedAt time.Time  `bson:"created_at"`
	UpdatedAt time.Time  `bson:"updated_at"`
	DeletedAt *time.Time `bson:"deleted_at,omitempty"`

	Role         string `bson:"role,omitempty"`
	CompanyId    string `bson:"company_id,omitempty"`
	DepartmentId string `bson:"department_id,omitempty"`
	GroupId      string `bson:"group_id,omitempty"`
}

func (u *Employee) SetCreatedAt() {
	now := time.Now()
	u.CreatedAt = now
	u.UpdatedAt = now
}

func (u *Employee) SetUpdatedAt() {
	u.UpdatedAt = time.Now()
}

type Company struct {
	Base   `bson:"inline"`
	Code   string `bson:"code,omitempty"`
	Name   string `bson:"name,omitempty"`
	Slogan string `bson:"slogan,omitempty"`
	Logo   string `bson:"logo,omitempty"`
}

type Department struct {
	Base          `bson:"inline"`
	Name          string `bson:"name,omitempty"`
	Note          string `bson:"note,omitempty"`
	CompanyId     string `bson:"company_id,omitempty"`
	EmployeeCount int    `bson:"employee_count,omitempty"`
}

type Group struct {
	Base          `bson:"inline"`
	Name          string `bson:"name,omitempty"`
	Note          string `bson:"note,omitempty"`
	CompanyId     string `bson:"company_id,omitempty"`
	DepartmentId  string `bson:"department_id,omitempty"`
	EmployeeCount int    `bson:"employee_count,omitempty"`
}
